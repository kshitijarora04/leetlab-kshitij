// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole{
  ADMIN
  USER
}

enum Difficulty{
  EASY
  MEDIUM
  HARD
}

model User{
  id String @id @default(uuid())
  name String?
  email String @unique
  image String?
  role UserRole @default(USER)
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // to display the problems created by a single user-->One to Many Realtion
  problems Problem[]
}

model Problem{
id String @id @default(uuid())
title String
description String
difficulty Difficulty @default(EASY)
tags String[] //tags for a problem
userId String
examples Json
constraints String
hints String?
editorial String?

testcases Json
codeSnippet Json
referenceSolutions Json

createdAt DateTime @default(now())
updatedAt DateTime @updatedAt

// Relationship
// name of relation-->user of type User
// userId is the foriegn key in the Problem Model which refers to id in the User Model
user User @relation(fields: [userId],references: [id],onDelete: Cascade)
}